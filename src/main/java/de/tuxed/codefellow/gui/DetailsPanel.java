/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DetailsPanel.java
 *
 * Created on Jun 11, 2010, 3:36:48 PM
 */
package de.tuxed.codefellow.gui;

import de.tuxed.codefellow.MethodInfo;
import javax.swing.AbstractListModel;
import javax.swing.ListModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeModel;
import org.apache.bcel.classfile.JavaClass;

/**
 *
 * @author roman
 */
public class DetailsPanel extends javax.swing.JPanel {
    
    /** Creates new form DetailsPanel */
    public DetailsPanel(MainPanel mainPanel, JavaClass javaClass) {
        initComponents();

        DefaultMutableTreeNode root = new DefaultMutableTreeNode(javaClass);
        addSuperTypeNodes(root, javaClass);
        TreeModel model = new DefaultTreeModel(root);
        classHierarchy.setModel(model);
        classHierarchy.setCellRenderer(new ClassInfoTreeCellRenderer());
        methodList.setCellRenderer(new MethodCellRenderer(mainPanel));
    }

    private void addSuperTypeNodes(DefaultMutableTreeNode parent, JavaClass type) {
        try {
            // Superclass
            JavaClass superClass = type.getSuperClass();
            if (superClass != null) {
                DefaultMutableTreeNode superNode = new DefaultMutableTreeNode(superClass);
                parent.add(superNode);
                addSuperTypeNodes(superNode, superClass);
            }

            // Interfaces
            DefaultMutableTreeNode interfaceNode;
            for (JavaClass ic : type.getInterfaces()) {
                interfaceNode = new DefaultMutableTreeNode(ic);
                parent.add(interfaceNode);
                addSuperTypeNodes(interfaceNode, ic);
            }
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        classHierarchy = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        methodList = new javax.swing.JList();

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        classHierarchy.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        classHierarchy.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                classHierarchyValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(classHierarchy);

        jScrollPane2.setViewportView(methodList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void classHierarchyValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_classHierarchyValueChanged
       DefaultMutableTreeNode node = (DefaultMutableTreeNode) classHierarchy.getSelectionPath().getLastPathComponent();
       JavaClass jc = (JavaClass) node.getUserObject();
        final MethodInfo[] methods = MethodInfo.createAllMethodInfosFromClass(jc);
        ListModel model = new AbstractListModel() {

            @Override
            public int getSize() {
                return methods.length;
            }

            @Override
            public Object getElementAt(int index) {
                return methods[index];
            }
        };
        methodList.setModel(model);
    }//GEN-LAST:event_classHierarchyValueChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree classHierarchy;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList methodList;
    // End of variables declaration//GEN-END:variables
}
