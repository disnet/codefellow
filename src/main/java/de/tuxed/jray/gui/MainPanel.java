/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainPanel.java
 *
 * Created on Jun 9, 2010, 8:07:53 PM
 */
package de.tuxed.jray.gui;

import de.tuxed.jray.ClassInfo;
import de.tuxed.jray.FsUtils;
import de.tuxed.jray.Project;
import de.tuxed.jray.Query;
import java.awt.event.KeyEvent;
import java.util.LinkedList;
import java.util.List;
import javax.swing.AbstractListModel;
import javax.swing.JTable;
import javax.swing.ListModel;

/**
 *
 * @author roman
 */
public class MainPanel extends javax.swing.JPanel {

    private Project project = null;
    private final ScopeWindow scopeWindow;
    private String classPathString = ".";

    /** Creates new form MainPanel */
    public MainPanel() {
        initComponents();

        classList.setCellRenderer(new ClassInfoCellRenderer());

        List<String[]> libraries = new LinkedList<String[]>();
        libraries.addAll(FsUtils.getAllProjectOutputDirectories("."));
        libraries.addAll(FsUtils.getAllUniqueJarFiles("."));

        this.scopeWindow = new ScopeWindow(this, libraries);

        for (String[] lib : libraries) {
            classPathString += ":" + lib[1];
        }
    }

    public void updateProject() {
        // active projects
        JTable table = scopeWindow.getTable();
        List<String[]> active = new LinkedList<String[]>();
        for (int i = 0; i < table.getModel().getRowCount(); i++) {
            boolean selected = (Boolean) table.getModel().getValueAt(i, 0);
            if (selected) {
                active.add(new String[]{
                            (String) table.getModel().getValueAt(i, 1),
                            (String) table.getModel().getValueAt(i, 2)});
            }
        }
        this.project = new Project(classPathString, active);
    }

    public void search() {
        String c = classSearch.getText().trim().equals("") ? "*" : classSearch.getText();
        String m = methodSearch.getText().trim().equals("") ? null : methodSearch.getText();
        Query q = new Query(project);
        final List<ClassInfo> result = q.query(c, m);

        ListModel model = new AbstractListModel() {

            @Override
            public int getSize() {
                return result.size();
            }

            @Override
            public Object getElementAt(int index) {
                return result.get(index);
            }
        };
        classList.setModel(model);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        selectScope = new javax.swing.JButton();
        classSearch = new javax.swing.JTextField();
        methodSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        classList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        methodList = new javax.swing.JList();

        jLabel1.setText("Scope");

        jLabel2.setText("Class");

        jLabel3.setText("Method");

        jLabel4.setText("bla");

        selectScope.setText("...");
        selectScope.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectScopeActionPerformed(evt);
            }
        });

        classSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                classSearchKeyPressed(evt);
            }
        });

        methodSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                methodSearchKeyPressed(evt);
            }
        });

        classList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                classListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(classList);

        jScrollPane2.setViewportView(methodList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(selectScope))
                            .addComponent(classSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                            .addComponent(methodSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(selectScope))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(classSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(methodSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void selectScopeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectScopeActionPerformed
        scopeWindow.setVisible(true);
    }//GEN-LAST:event_selectScopeActionPerformed

    private void classSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_classSearchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            search();
        }
    }//GEN-LAST:event_classSearchKeyPressed

    private void methodSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_methodSearchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            search();
        }
    }//GEN-LAST:event_methodSearchKeyPressed

    private void classListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_classListValueChanged
        final ClassInfo ci = (ClassInfo) classList.getSelectedValue();
        if (ci == null)
            return;
        
        ListModel model = new AbstractListModel() {

            @Override
            public int getSize() {
                if (ci.getMethodInfos() != null) {
                    return ci.getMethodInfos().length;
                } else {
                    return 0;
                }
            }

            @Override
            public Object getElementAt(int index) {
                return ci.getMethodInfos()[index];
            }
        };
        methodList.setModel(model);
    }//GEN-LAST:event_classListValueChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList classList;
    private javax.swing.JTextField classSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList methodList;
    private javax.swing.JTextField methodSearch;
    private javax.swing.JButton selectScope;
    // End of variables declaration//GEN-END:variables
}
